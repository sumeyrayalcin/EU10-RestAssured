How to navigate through JSON body/payload and read values from keys ?
there are multiple ways of navigating through json
	-using path() method
	-using JsonPath
	-using deserialization to Java collections
	-using deserialization to POJO(Java custom classes)

Response object has .path method where we provide key of the json, it returns the value of it.

JsonPath
another way of navigating inside the json respone/body
to use json path we put response body inside the jsonpath object

        JsonPath jsonPath = response.jsonPath();

int id = jsonPath.getInt("id");
        String name = jsonPath.getString("name");
        String gender =jsonPath.getString("gender");
        long phone = jsonPath.getLong("phone");

   //we are taking the response body putting inside the json path object
   //why? it has more features and easy to manage the json file

Then we can use jsonPath getters to retrive information. we still provide path as a GPath just like we use path() method. there is no difference for json or path() to provide path.
===================================
"items.findAll {it.region_id==2}.country_name"

look all the values inside the items and if region_id equals to 2 get country_name

findAll is kind of keyword to filter the result
{it.region_id==2} --> "it" is kind of iterator, for each region_id
check one by one and when region_id equals to 2

.country name --> put country name to the list


//we implement filter json that we have
how you navigate inside the json with an if statement (to filter)--> "items.findAll {it.region_id==2}.country_name"
   //   it:each
   //   check each of the region id
   //   and when the region id is 2, get the country name(value) in return
In this example 2 is not related to HR, related to json.


given().queryParam("limit", 107)   //with that we can see all the employees in json.
if hasMore:false -->  so we can see the all employees.
if hasMore: true --> there is also employees that we can not see on body

it is not specific for jsonpath, it works in response.path() too
response.path("items.max {it.salary}.first_name");